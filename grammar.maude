*** Step 1: Define commands
fmod DCA2MC-SIGN is
    ex FULL-MAUDE-SIGN .

    op initialize`[_`,_`,_`]    : @ModExp@ @Token@ @Token@ -> @Command@ .
    op layerCheck_              : @Bubble@                 -> @Command@ .
    op lastCheck                :                          -> @Command@ .
    op analyze                  :                          -> @Command@ .
    op check_                   : @Bubble@                 -> @Command@ .
    op help                     :                          -> @Command@ .
    op quit                     :                          -> @Command@ .
    op set-checker-cores_       : @Token@                  -> @Command@ .
    op set-checker_             : @Token@                  -> @Command@ .
    op set-cores_               : @Token@                  -> @Command@ .
    op set-seed_                : @Token@                  -> @Command@ .
    op select_                  : @Token@                  -> @Command@ .
endfm

*** Step 2: Include into grammar
fmod DCA2MC-GRAMMAR is
    pr META-LEVEL .
    pr META-FULL-MAUDE-SIGN .
    pr FM-UNIT .

    op DCA2MC-GRAMMAR : -> FModule .
    eq DCA2MC-GRAMMAR = addImports((including 'DCA2MC-SIGN .), GRAMMAR) .
endfm